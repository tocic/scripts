#!/bin/bash
#
# Turn off/on the touchpad.
#
# Dependencies: coreutils, grep, util-linux, xorg-xinput

set -o nounset -o pipefail

readonly L_OPTS="help,version"
readonly OPTS="hVv"

readonly CMD="${0##*/}"
readonly USAGE="${CMD} [OPTION]..."
readonly USAGE_ERR_MSG=$(
  cat <<END
Usage: ${USAGE}
Try '${CMD} --help' for more information.
END
)
readonly VERSION_INFO=$(
  cat <<END
${CMD} (scripts) 1.0.0

This is free and unencumbered software released into the public domain.
For more information, please refer to <https://unlicense.org/>.
END
)
readonly HELP=$(
  cat <<END
SYNOPSIS
  ${USAGE}

DESCRIPTION
  Turn off/on the touchpad.

OPTIONS
  -h, --help
    display this help and exit
  -V, -v, --version
    display version and exit
END
)

opts=$(getopt --options=${OPTS} --longoptions=${L_OPTS} --name "${CMD}" -- "$@")
if (($? != 0)); then
  echo "${USAGE_ERR_MSG}"
  exit 2
fi

eval set -- "${opts}"

need_help=false
need_version=false

while true; do
  case "$1" in
    -h | --help)
      need_help=true
      shift
      break
      ;;
    -V | -v | --version)
      need_version=true
      shift
      break
      ;;
    --)
      shift
      break
      ;;
  esac
done

if [[ $need_help == true ]]; then
  echo "${HELP}"
  exit 0
fi

if [[ $need_version == true ]]; then
  echo "${VERSION_INFO}"
  exit 0
fi

if (($# != 0)); then
  echo "${CMD}: expected 0 arguments; got $#"
  echo "${USAGE_ERR_MSG}"
  exit 2
fi

readonly DEVICE=$(
  xinput list --name-only \
    | LC_ALL=C grep --extended --ignore-case "(touchpad|glidepoint)"
)

if xinput list-props "${DEVICE}" \
     | grep --perl-regexp --quiet "Device Enabled[^:]*:\s*1"; then
  xinput disable "${DEVICE}"
else
  xinput enable "${DEVICE}"
fi
