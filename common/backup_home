#!/bin/bash
#
# Backup the home directory to the borg archive.
#
# Dependencies: coreutils, borg, util-linux

set -o nounset -o pipefail

readonly DEFAULT_ARCHIVE_NAME="{user}_{now:%Y-%m-%d_%H:%M:%S}"

readonly L_OPTS="archive_name:,help,version"
readonly OPTS="a:hVv"

readonly CMD="${0##*/}"
readonly USAGE="${CMD} [OPTION]... REPO_DIR"
readonly USAGE_ERR_MSG=$(
  cat <<END
Usage: ${USAGE}
Try '${CMD} --help' for more information.
END
)
readonly VERSION_INFO=$(
  cat <<END
${CMD} (scripts) 1.0.0

This is free and unencumbered software released into the public domain.
For more information, please refer to <https://unlicense.org/>.
END
)
readonly HELP=$(
  cat <<END
SYNOPSIS
  ${USAGE}

DESCRIPTION
  Backup the home directory to the borg archive REPO_DIR::ARCHIVE.

OPTIONS
  -a, --archive_name ARCHIVE, --archive_name=ARCHIVE
    change the borg archive name from \$user_\$date_\$time to ARCHIVE
  -h, --help
    display this help and exit
  -V, -v, --version
    display version and exit
END
)

opts=$(getopt --options=${OPTS} --longoptions=${L_OPTS} --name "${CMD}" -- "$@")
if (($? != 0)); then
  echo "${USAGE_ERR_MSG}"
  exit 2
fi

eval set -- "${opts}"

archive_name="${DEFAULT_ARCHIVE_NAME}"
need_help=false
need_version=false

while true; do
  case "$1" in
    -a | --archive_name)
      archive_name="$2"
      shift 2
      ;;
    -h | --help)
      need_help=true
      shift
      break
      ;;
    -V | -v | --version)
      need_version=true
      shift
      break
      ;;
    --)
      shift
      break
      ;;
  esac
done

if [[ $need_help == true ]]; then
  echo "${HELP}"
  exit 0
fi

if [[ $need_version == true ]]; then
  echo "${VERSION_INFO}"
  exit 0
fi

if (($# != 1)); then
  echo "${CMD}: expected 1 argument; got $#"
  echo "${USAGE_ERR_MSG}"
  exit 2
fi

borg create \
  --exclude "*/.cache" --exclude "*/__pycache__" \
   --exclude-caches --exclude-nodump \
  --progress \
  --show-rc --stats \
  "$(realpath --no-symlinks "$1")::${archive_name}" "${HOME}"

declare -ir exit_code=$?

if ((exit_code == 0 || exit_code == 1)); then
  exit 0
else
  exit ${exit_code}
fi
