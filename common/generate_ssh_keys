#!/bin/bash
#
# Generate an SSH key pair.
#
# Dependencies: coreutils, openssh, util-linux

readonly L_OPTS="comment:,help"
readonly OPTS="C:c:h"

readonly CMD="${0##*/}"
readonly USAGE="${CMD} [OPTION]... FILE"
readonly USAGE_ERR_MSG=$(
  cat <<END
Usage: ${USAGE}
Try '${CMD} --help' for more information.
END
)
readonly HELP=$(
  cat <<END
SYNOPSIS
  ${USAGE}

DESCRIPTION
  Generate an SSH key pair {FILE, FILE.pub} using the ed25519 key type.

OPTIONS
  -C, -c, --comment COMMENT, --comment=COMMENT
    add a comment to the keys (no comment by default)
  -h, --help
    display this help and exit
END
)

opts=$(getopt --options=${OPTS} --longoptions=${L_OPTS} --name "${CMD}" -- "$@")
if (($? != 0)); then
  echo "${USAGE_ERR_MSG}"
  exit 2
fi

eval set -- "${opts}"

comment=""
need_help=false

while true; do
  case "$1" in
    -C | -c | --comment)
      comment="$2"
      shift 2
      ;;
    -h | --help)
      need_help=true
      shift
      break
      ;;
    --)
      shift
      break
      ;;
  esac
done

if [[ $need_help == true ]]; then
  echo "${HELP}"
  exit 0
fi

if (($# != 1)); then
  echo "${CMD}: expected 1 argument; got $#"
  echo "${USAGE_ERR_MSG}"
  exit 2
fi

ssh-keygen -a 128 -C "${comment}" -f "$1" -t "ed25519"
